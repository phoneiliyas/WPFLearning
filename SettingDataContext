1. Create a class and type prop and add below code:

    public static bool GetAutoWireViewModel(DependencyObject obj)
            {
                return (bool)obj.GetValue(AutoWireViewModelProperty);
            }

            public static void SetAutoWireViewModel(DependencyObject obj, bool value)
            {
                obj.SetValue(AutoWireViewModelProperty, value);
            }

            // Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...
            public static readonly DependencyProperty AutoWireViewModelProperty =
                DependencyProperty.RegisterAttached("AutoWireViewModel", typeof(bool), 
                    typeof(ViewModelLocator), new PropertyMetadata(false, AutoWireViewModelChanged));

            static void AutoWireViewModelChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
            {
                if (DesignerProperties.GetIsInDesignMode(new System.Windows.DependencyObject())) return;

                var viewTypeName = d.GetType().FullName;
                var viewModelTypeName = viewTypeName + "Model";
                var viewModelType = Type.GetType(viewModelTypeName);
                var viewModel = Activator.CreateInstance(viewModelType);
                ((FrameworkElement)d).DataContext = viewModel;

            }
            
  2. Add Two lines in xaml to automatically set DataContext:
  
       ...  
       xmlns:root="clr-namespace:WpfApp3"
      //mc:Ignorable="d" 
      //d:DesignHeight="450" d:DesignWidth="800"
      //Title="CustomerDetails"
      root:ViewModelLocator.AutoWireViewModel="TRUE">
